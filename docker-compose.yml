version: "3"
services:
  caddy:
    container_name: siyuan-caddy
    command: caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
    restart: on-failure
    networks: 
      - service-net
      - monitor-net
    env_file:
      - './secrets/caddy.env'
    build:
      context: ./caddy
      args:
        - USE_SJTUG=true
    volumes:
      - "./caddy/Caddyfile:/etc/caddy/Caddyfile:ro"
      - "./data/caddy/data:/data"
      - "./data/caddy/config:/config"
      - "/mnt/disk1:/srv/disk1"
      - "/mnt/disk2:/srv/disk2"
      - "./data/caddy/dists:/dists"
    ports: 
      - 80:80
      - 443:443
    healthcheck:
      test: curl -f http://localhost || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 10G
    memswap_limit: 10G

  lug:
    container_name: siyuan-lug
    restart: on-failure
    command: -c /config.yaml
    networks: 
      - service-net
    build:
      context: ./lug
      args:
        - USE_SJTUG=true
    expose:
      - 8081
      - 7001
    volumes:
      - "./lug/worker-script:/worker-script:ro"
      - "./lug/config.yaml:/config.yaml:ro"
      - "/mnt/disk1:/srv/disk1"
      - "/mnt/disk2:/srv/disk2"
    healthcheck:
      test: curl -f http://localhost:7001/lug/v1/manager/summary || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 10G
    memswap_limit: 10G
  
  logspout:
    container_name: logspout
    restart: on-failure
    image: gliderlabs/logspout
    container_name: siyuan-logspout
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    container_name: logspout
    command: syslog+tcp://${ELK_ENDPOINT}
  
  cadvisor:
    container_name: siyuan-cadvisor
    restart: on-failure
    networks: 
      - monitor-net
    image: google/cadvisor:latest
    expose:
      - 8080
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"


  nodeexporter:
    container_name: siyuan-node_exporter
    restart: on-failure
    image: caddy:latest
    command: caddy reverse-proxy --from :9109 --to ${DOCKER_HOST_ADDR}:9100
    expose:
      - 9109
    networks:
      - monitor-net

networks:
  service-net:
  monitor-net:
