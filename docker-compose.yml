version: "2"
services:
  caddy:
    container_name: siyuan-caddy
    command: caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
    restart: unless-stopped
    networks: 
      - ipv6-service-net
      - monitor-net
      - host-monitor-net
    env_file:
      - './secrets/caddy.env'
    build:
      context: ./caddy
      args:
        - USE_SJTUG=true
    volumes:
      - "./caddy/Caddyfile:/etc/caddy/Caddyfile:ro"
      - "./data/caddy/data:/data"
      - "./data/caddy/config:/config"
      - "/mnt/disk1:/srv/disk1"
      - "/mnt/disk2:/srv/disk2"
      - "./data/caddy/dists:/dists"
      - "/etc/ssl/certs/ftp_sjtu:/etc/ssl/certs/ftp_sjtu:ro"
    ports: 
      - 80:80
      - 443:443
    healthcheck:
      test: curl -f http://localhost || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 10G
    memswap_limit: 10G

  lug:
    container_name: siyuan-lug
    restart: unless-stopped
    command: -c /config.yaml
    networks: 
      - ipv6-service-net
    build:
      context: ./lug
      args:
        - USE_SJTUG=true
        - CLONE_VERSION=v0.1.16
        - LUG_VERSION=v0.12.4
    expose:
      - 8081
      - 7001
    volumes:
      - "./lug/worker-script:/worker-script:ro"
      - "./lug/config.yaml:/config.yaml:ro"
      - "/mnt/disk1:/srv/disk1"
      - "/mnt/disk2:/srv/disk2"
      - "./secrets/git-credentials:/root/.git-credentials:ro"
      - "./common/gai.conf:/etc/gai.conf:ro"
    environment:
      RUST_LOG: info
    healthcheck:
      test: curl -f http://localhost:7001/lug/v1/manager/summary || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 20G
    memswap_limit: 20G
  
  logspout:
    container_name: logspout
    restart: unless-stopped
    image: gliderlabs/logspout
    container_name: siyuan-logspout
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    container_name: logspout
    command: syslog+tcp://siyuan-tunnel:5004
    networks:
      - tunnel-net
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 2G
    memswap_limit: 2G

  cadvisor:
    container_name: siyuan-cadvisor
    restart: unless-stopped
    networks: 
      - monitor-net
    image: google/cadvisor:latest
    expose:
      - 8080
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 2G
    memswap_limit: 2G
    
  tunnel:
    container_name: siyuan-tunnel
    restart: unless-stopped
    image: v2ray/official
    expose:
      - 5003
      - 5004
      - 5005
    ports:
      - "127.0.0.1:5005:5005"
    networks:
      - tunnel-net
    volumes: 
      - "./secrets/v2ray.json:/etc/v2ray/config.json:z,ro"
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 2G
    memswap_limit: 2G
    
  gcr-registry:
    container_name: siyuan-gcr-registry
    restart: unless-stopped
    image: registry:2.6
    networks:
      - ipv6-service-net
      - proxy-net
    expose:
      - 80
      - 5001
    volumes:
      - "./secrets/gcr-registry.yml:/etc/docker/registry/config.yml"
    environment:
      http_proxy: http://siyuan-clash:8080
      https_proxy: http://siyuan-clash:8080
      HTTP_PROXY: http://siyuan-clash:8080
      HTTPS_PROXY: http://siyuan-clash:8080
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 5G
    memswap_limit: 5G

  docker-registry:
    container_name: siyuan-docker-registry
    restart: unless-stopped
    image: registry:2.6
    networks:
      - ipv6-service-net
      - proxy-net
    expose:
      - 80
      - 5001
    volumes:
      - "./secrets/docker-registry.yml:/etc/docker/registry/config.yml"
    environment:
      http_proxy: http://siyuan-clash:8080
      https_proxy: http://siyuan-clash:8080
      HTTP_PROXY: http://siyuan-clash:8080
      HTTPS_PROXY: http://siyuan-clash:8080
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 5G
    memswap_limit: 5G
      
  clash:
    build:
      context: ./clash
    command: -d /etc/clash
    volumes:
      - ./secrets/clash_config.yaml:/etc/clash/config.yaml:z,ro
    networks:
      - proxy-net
    expose:
      - 8080
    container_name: siyuan-clash
    restart: unless-stopped
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    mem_limit: 5G
    memswap_limit: 5G

  mirror-intel:
    build:
      context: ./mirror-intel
      args:
        - USE_SJTUG=true
        - INTEL_VERSION=v0.1.19
    networks:
      - ipv6-service-net
    expose:
      - 8000
    container_name: siyuan-mirror-intel
    restart: unless-stopped
    env_file:
      - './secrets/mirror-intel.env'
    environment:
      RUST_LOG: warn
    logging:
      options:
        max-size: "4M"
        max-file: "20"
    ulimits:
      nofile:
        soft: 80000
        hard: 120000
    volumes:
      - "/mnt/disk2/mirror-intel-cache:/mnt/cache"
      - "./common/gai.conf:/etc/gai.conf:ro"
    mem_limit: 15G
    memswap_limit: 15G
  
  ipv6nat:
    image: robbertkl/ipv6nat
    network_mode: host
    restart: unless-stopped
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "/lib/modules:/lib/modules:ro"
    cap_add:
    - SYS_MODULE
    - NET_ADMIN
    - NET_RAW

networks:
  host-monitor-net:
    driver: bridge
    ipam:
      driver: default
      config:
      -  subnet: 172.31.0.0/16
    driver_opts:
      com.docker.network.driver.mtu: 1450
  monitor-net:
    driver_opts:
      com.docker.network.driver.mtu: 1450
  tunnel-net:
    driver_opts:
      com.docker.network.driver.mtu: 1450
  proxy-net:
    driver_opts:
      com.docker.network.driver.mtu: 1450
  ipv6-service-net:
    enable_ipv6: true
    driver: bridge
    ipam:
      driver: default
      config:
      -  subnet: fd01::/80
    driver_opts:
      com.docker.network.driver.mtu: 1450
